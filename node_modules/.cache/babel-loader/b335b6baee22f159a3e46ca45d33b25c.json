{"ast":null,"code":"import _toConsumableArray from\"/Users/vivienhan/Documents/5610/webdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/vivienhan/Documents/5610/webdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import posts from'./data/tweets.json';var tweets=function tweets(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:posts;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'like-tweet':return state.map(function(tweet){if(tweet._id===action.tweet._id){if(tweet.liked===true){tweet.liked=false;tweet.stats.likes--;}else{tweet.liked=true;tweet.stats.likes++;}return tweet;}else{return tweet;}});case'delete-tweet':return{tweets:state.filter(function(tweet){return tweet._id!==action.tweet._id;})};case'create-tweet':var tweet=_objectSpread(_objectSpread({_id:new Date().getTime()+'',\"topic\":\"Web Development\",\"userName\":\"ReactJS\",\"verified\":false,\"handle\":\"ReactJS\",\"time\":\"2h\"},action.tweet),{},{\"avatar-image\":\"/a5/twitter/images/react-blue.png\",\"logo-image\":\"/a5/twitter/images/react-blue.png\",\"liked\":false,\"stats\":{\"comments\":123,\"retweets\":234,\"likes\":345}});return[tweet].concat(_toConsumableArray(state));default:return state;}};export default tweets;","map":{"version":3,"sources":["/Users/vivienhan/Documents/5610/webdev/src/reducers/tweets.js"],"names":["posts","tweets","state","action","type","map","tweet","_id","liked","stats","likes","filter","Date","getTime"],"mappings":"iUAAA,MAAOA,CAAAA,KAAP,KAAkB,oBAAlB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAA2B,IAA1BC,CAAAA,KAA0B,2DAAlBF,KAAkB,IAAXG,CAAAA,MAAW,2CACxC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,YAAL,CACE,MAAOF,CAAAA,KAAK,CAACG,GAAN,CAAU,SAAAC,KAAK,CAAI,CACtB,GAAIA,KAAK,CAACC,GAAN,GAAcJ,MAAM,CAACG,KAAP,CAAaC,GAA/B,CAAoC,CAClC,GAAID,KAAK,CAACE,KAAN,GAAgB,IAApB,CAA0B,CACxBF,KAAK,CAACE,KAAN,CAAc,KAAd,CACAF,KAAK,CAACG,KAAN,CAAYC,KAAZ,GACD,CAHD,IAGO,CACLJ,KAAK,CAACE,KAAN,CAAc,IAAd,CACAF,KAAK,CAACG,KAAN,CAAYC,KAAZ,GACD,CACD,MAAOJ,CAAAA,KAAP,CACD,CATD,IASO,CACL,MAAOA,CAAAA,KAAP,CACD,CACF,CAbI,CAAP,CAeF,IAAK,cAAL,CACE,MAAQ,CACNL,MAAM,CAAEC,KAAK,CAACS,MAAN,CAAa,SAAAL,KAAK,QAAIA,CAAAA,KAAK,CAACC,GAAN,GAAcJ,MAAM,CAACG,KAAP,CAAaC,GAA/B,EAAlB,CADF,CAAR,CAIF,IAAK,cAAL,CACE,GAAMD,CAAAA,KAAK,8BACTC,GAAG,CAAG,GAAIK,CAAAA,IAAJ,EAAD,CAAaC,OAAb,GAAyB,EADrB,CAET,QAAS,iBAFA,CAGT,WAAY,SAHH,CAIT,WAAY,KAJH,CAKT,SAAU,SALD,CAMT,OAAQ,IANC,EAONV,MAAM,CAACG,KAPD,MAQT,eAAgB,mCARP,CAST,aAAc,mCATL,CAUT,QAAS,KAVA,CAWT,QAAS,CACP,WAAY,GADL,CAEP,WAAY,GAFL,CAGP,QAAS,GAHF,CAXA,EAAX,CAiBA,OACIA,KADJ,4BAEOJ,KAFP,GAKF,QACE,MAAOA,CAAAA,KAAP,CA9CJ,CAgDD,CAjDD,CAmDA,cAAeD,CAAAA,MAAf","sourcesContent":["import posts from './data/tweets.json';\n\nconst tweets = (state = posts, action) => {\n  switch (action.type) {\n    case 'like-tweet':\n      return state.map(tweet => {\n          if (tweet._id === action.tweet._id) {\n            if (tweet.liked === true) {\n              tweet.liked = false;\n              tweet.stats.likes--;\n            } else {\n              tweet.liked = true;\n              tweet.stats.likes++;\n            }\n            return tweet;\n          } else {\n            return tweet;\n          }\n        });\n\n    case 'delete-tweet':\n      return ({\n        tweets: state.filter(tweet => tweet._id !== action.tweet._id)\n      })\n\n    case 'create-tweet':\n      const tweet = {\n        _id: (new Date()).getTime() + '',\n        \"topic\": \"Web Development\",\n        \"userName\": \"ReactJS\",\n        \"verified\": false,\n        \"handle\": \"ReactJS\",\n        \"time\": \"2h\",\n        ...action.tweet,\n        \"avatar-image\": \"/a5/twitter/images/react-blue.png\",\n        \"logo-image\": \"/a5/twitter/images/react-blue.png\",\n        \"liked\": false,\n        \"stats\": {\n          \"comments\": 123,\n          \"retweets\": 234,\n          \"likes\": 345\n        },\n      };\n      return ([\n          tweet,\n          ...state,\n        ]);\n\n    default:\n      return(state);\n  }\n};\n\nexport default tweets;"]},"metadata":{},"sourceType":"module"}