{"ast":null,"code":"import posts from './data/tweets.json';\n\nconst tweets = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : posts;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'like-tweet':\n      return state.map(tweet => {\n        if (tweet._id === action.tweet._id) {\n          if (tweet.liked === true) {\n            tweet.liked = false;\n            tweet.stats.likes--;\n          } else {\n            tweet.liked = true;\n            tweet.stats.likes++;\n          }\n\n          return tweet;\n        } else {\n          return tweet;\n        }\n      });\n\n    case 'delete-tweet':\n      return;\n      state.filter(tweet => tweet._id !== action.tweet._id);\n\n    case 'create-tweet':\n      const tweet = {\n        _id: new Date().getTime() + '',\n        \"topic\": \"Web Development\",\n        \"userName\": \"ReactJS\",\n        \"verified\": false,\n        \"handle\": \"ReactJS\",\n        \"time\": \"2h\",\n        ...action.tweet,\n        \"avatar-image\": \"/a5/twitter/images/react-blue.png\",\n        \"logo-image\": \"/a5/twitter/images/react-blue.png\",\n        \"liked\": false,\n        \"stats\": {\n          \"comments\": 123,\n          \"retweets\": 234,\n          \"likes\": 345\n        }\n      };\n      return [tweet, ...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default tweets;","map":{"version":3,"sources":["/Users/vivienhan/Documents/5610/webdev/src/reducers/tweets.js"],"names":["posts","tweets","state","action","type","map","tweet","_id","liked","stats","likes","filter","Date","getTime"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAIA,MAAMC,MAAM,GAAG,YAA2B;AAAA,MAA1BC,KAA0B,uEAAlBF,KAAkB;AAAA,MAAXG,MAAW;;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAUC,KAAK,IAAI;AACtB,YAAIA,KAAK,CAACC,GAAN,KAAcJ,MAAM,CAACG,KAAP,CAAaC,GAA/B,EAAoC;AAClC,cAAID,KAAK,CAACE,KAAN,KAAgB,IAApB,EAA0B;AACxBF,YAAAA,KAAK,CAACE,KAAN,GAAc,KAAd;AACAF,YAAAA,KAAK,CAACG,KAAN,CAAYC,KAAZ;AACD,WAHD,MAGO;AACLJ,YAAAA,KAAK,CAACE,KAAN,GAAc,IAAd;AACAF,YAAAA,KAAK,CAACG,KAAN,CAAYC,KAAZ;AACD;;AACD,iBAAOJ,KAAP;AACD,SATD,MASO;AACL,iBAAOA,KAAP;AACD;AACF,OAbI,CAAP;;AAeF,SAAK,cAAL;AACE;AACEJ,MAAAA,KAAK,CAACS,MAAN,CAAaL,KAAK,IAAIA,KAAK,CAACC,GAAN,KAAcJ,MAAM,CAACG,KAAP,CAAaC,GAAjD;;AAEJ,SAAK,cAAL;AACE,YAAMD,KAAK,GAAG;AACZC,QAAAA,GAAG,EAAG,IAAIK,IAAJ,EAAD,CAAaC,OAAb,KAAyB,EADlB;AAEZ,iBAAS,iBAFG;AAGZ,oBAAY,SAHA;AAIZ,oBAAY,KAJA;AAKZ,kBAAU,SALE;AAMZ,gBAAQ,IANI;AAOZ,WAAGV,MAAM,CAACG,KAPE;AAQZ,wBAAgB,mCARJ;AASZ,sBAAc,mCATF;AAUZ,iBAAS,KAVG;AAWZ,iBAAS;AACP,sBAAY,GADL;AAEP,sBAAY,GAFL;AAGP,mBAAS;AAHF;AAXG,OAAd;AAiBA,aAAQ,CACJA,KADI,EAEJ,GAAGJ,KAFC,CAAR;;AAMF;AACE,aAAOA,KAAP;AA9CJ;AAgDD,CAjDD;;AAmDA,eAAeD,MAAf","sourcesContent":["import posts from './data/tweets.json';\n\n\n\nconst tweets = (state = posts, action) => {\n  switch (action.type) {\n    case 'like-tweet':\n      return state.map(tweet => {\n          if (tweet._id === action.tweet._id) {\n            if (tweet.liked === true) {\n              tweet.liked = false;\n              tweet.stats.likes--;\n            } else {\n              tweet.liked = true;\n              tweet.stats.likes++;\n            }\n            return tweet;\n          } else {\n            return tweet;\n          }\n        });\n\n    case 'delete-tweet':\n      return\n        state.filter(tweet => tweet._id !== action.tweet._id)\n\n    case 'create-tweet':\n      const tweet = {\n        _id: (new Date()).getTime() + '',\n        \"topic\": \"Web Development\",\n        \"userName\": \"ReactJS\",\n        \"verified\": false,\n        \"handle\": \"ReactJS\",\n        \"time\": \"2h\",\n        ...action.tweet,\n        \"avatar-image\": \"/a5/twitter/images/react-blue.png\",\n        \"logo-image\": \"/a5/twitter/images/react-blue.png\",\n        \"liked\": false,\n        \"stats\": {\n          \"comments\": 123,\n          \"retweets\": 234,\n          \"likes\": 345\n        },\n      };\n      return ([\n          tweet,\n          ...state,\n        ]\n      );\n\n    default:\n      return(state);\n  }\n};\n\nexport default tweets;"]},"metadata":{},"sourceType":"module"}